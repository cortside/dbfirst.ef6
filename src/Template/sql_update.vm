#*

        sql_update.vm - default sql update stored proc template (replaces SqlGenerator)

*###
#if($element.GenerateUpdateStoredProcScript)
#set($at = '@')
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sp${element.Name}_Update]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[sp${element.Name}_Update]
GO

SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE dbo.$sql.Escape("sp${element.Name}_Update")

#set($id = $element.GetIdentityColumn())
#set($cols = 0)
#foreach($column in $element.Columns)
#if(!$column.ViewColumn && !$element.IsPrimaryKeyColumn($column.Name))
#set($cols = $cols + 1)#if($cols>1),
#end
	${at}${column.CodeSafeName}	${column.SqlType.Declaration} = null#end
#end
#if($element.Audit)#if($element.Columns.Count>0),#end

	@CreateDate DateTime = null,
	@CreateUserId Int = null,
	@LastModifiedDate DateTime = null,
	@LastModifiedUserId Int = null,
#end
#foreach($column in $element.GetPrimaryKeyColumns())
	${at}${column.CodeSafeName}	${column.SqlType.Declaration} = null#end

AS

## this is to set the columns set to null with their default if they have one and the column is required
#foreach($column in $element.Columns)#if($column.Default.Length > 0 && !$column.ViewColumn && $column.Required)
if @$column.Name is null set @$column.Name=$column.Default
#end#end

UPDATE
	$sql.Escape(${element.Name})
SET
#set($cols = 0)
#foreach($column in $element.Columns)
#if(!$column.ViewColumn && !$column.Identity && !$element.IsPrimaryKeyColumn($column.Name))
#set($cols = $cols + 1)#if($cols>1),
#end
	$sql.Escape(${column.Name}) = @${column.CodeSafeName}#end
#end
#if($element.Audit)#if($element.Columns.Count>0),#end

	CreateDate = @CreateDate,
	CreateUserId = @CreateUserId,
	LastModifiedDate = @LastModifiedDate,
	LastModifiedUserId = @LastModifiedUserId
#end

WHERE
#foreach($column in $element.GetPrimaryKeyColumns())
#if($velocityCount > 1)
	 AND #end$sql.Escape(${column.Name}) = @${column.CodeSafeName}
#end


#*if @@ROWCOUNT <> 1
    BEGIN
        RAISERROR  ('sp${element.Name}_Update:  update was expected to update a single row and updated %d rows', 16,1, @@ROWCOUNT)
        RETURN(-1)
    END
GO*#

#if ($element.User.Length > 0)
grant execute on [sp${element.Name}_Update] to [$element.User]
GO

#end
#end